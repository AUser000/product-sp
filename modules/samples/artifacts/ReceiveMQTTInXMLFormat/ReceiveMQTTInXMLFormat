@App:name("ReceiveMQTTInXMLFormat")

@App:description('Receive events via MQTT transport in XML format and view the output on the console.')

/*
Purpose:
    This application demonstrates how to configure WSO2 Stream Processor to receive sweet production events via MQTT transport in XML format and log the  events in LowProducitonAlertStream to the  output  console.

Prerequisites:
    1) Save this sample
    2) Before run this MQTT sample, set up mosquitto server which support mqtt
    3) After the set up ,start the mosquitto server by running the following command
        sudo service mosquitto start

Executing the Sample:
    1) Start the Siddhi application by clicking on 'Run'.
    2) "Siddhi App ReceiveMQTTInXMLFormat successfully deployed" message would be shown in the console

Testing the Sample:
    Option1: Publish events with the command line publisher:
        Open a terminal and publish events using following command. (The values for name and amount attributes can be changed as desired)
        mosquitto_pub -t 'mqtt_topic_input' -m '<events><event><name>sugar</name><amount>300.0</amount></event></events>'

Viewing the Results:
    See the output. Following message would be shown on the console.
    ReceiveHTTPInXMLFormatWithDefaultMapping : LowProducitonAlertStream : Event{timestamp=1511938781887, data=[sugar, 300.0], isExpired=false}
Note:
    Stop this Siddhi application
    Stop the mosquitto server using following command once you are done with the execution.
        sudo service mosquitto stop

*/

@source(type='mqtt', url= 'tcp://localhost:1883',topic='mqtt_topic_input', @map(type='xml'))
define stream SweetProductionStream (name string, amount double);

@sink(type='log')
define stream LowProducitonAlertStream (name string, amount double);

-- passthrough data in the SweetProductionStream into LowProducitonAlertStream
@info(name='query1')
from SweetProductionStream
select *
insert into LowProducitonAlertStream;
