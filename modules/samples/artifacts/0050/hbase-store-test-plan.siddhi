@App:name("hbase-store-test-plan")

/*
--
[1] Copy {WSO2SPHome}/samples/artifacts/0050/hbase-store-test-plan.siddhi file to {WSO2_SP_Home}/wso2/worker/deployment/siddhi-files/.

[3] The OSGi-fied shaded HBase client and Apache HTrace core bundles should be added to the WSO2 SP classpath:
  [3.1] Download the following files:
    [3.1.1] HBase shaded client: http://central.maven.org/maven2/org/apache/hbase/hbase-shaded-client/1.3.1/hbase-shaded-client-1.3.1.jar
    [3.1.2] Apache HTrace core: http://central.maven.org/maven2/org/apache/htrace/htrace-core/3.1.0-incubating/htrace-core-3.1.0-incubating.jar
  [3.2] Use the "jartobundle" tool in {WSO2_SP_Home}/bin to convert the above jars into OSGi bundles.
  [3.3] Copy over the converted bundles to the WSO2 SP classpath.

[4] Navigate to {WSO2SPHome}/bin and start the server using ./worker.sh
[5] Navigate to {WSO2SPHome}/samples/sample-clients/tcp-client and run the "ant" command without arguments to populate the HBase store with data.
[6] Navigate to {WSO2SPHome}/samples/sample-clients/tcp-client and run the "ant" command with the "storeTest" argument (e.g. "ant storeTest") to send events to the receptor stream and simulate reading from the store.
--
*/

@Source(type = 'tcp', context='SmartHomeData',
@map(type='binary'))
define stream SmartHomeData (id string, value float, property bool, plugId int, householdId int, houseId int, currentTime string);

@Source(type = 'tcp', context='TestData',
@map(type='binary'))
define stream TestData (property bool);

@Store(type='hbase', hbase.zookeeper.quorum='localhost')
@PrimaryKey('id')
define table SmartHomeTable (id string, value float, property bool, plugId int, householdId int, houseId int, currentTime string);

from SmartHomeData
insert into SmartHomeTable;

from TestData#window.length(1) join SmartHomeTable
on TestData.property==SmartHomeTable.property
select TestData.property as TestProperty, SmartHomeTable.houseId as houseId, SmartHomeTable.value as value
insert into OutputStream;

from OutputStream#log()
insert into IgnoreStream;
