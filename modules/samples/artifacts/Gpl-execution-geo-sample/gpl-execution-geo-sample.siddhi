@App:name("gpl-execution-geo-sample")
@App:description('This will demostrate the distance between two locations')
/*
Purpose:

	This app will demostrate how to use the extension siddhi-gpl-execution-geo.

Prerequisites:

    1. Copy the siddhisiddhi-gpl-execution-geo jar from the below link into {WSO2SPHome}/lib.
    Build the jar using following link
        https://github.com/wso2-extensions/siddhi-gpl-execution-geo

    2. Save this sample. If there is no syntax error, the following messages would be shown on the console
	     * - Siddhi App gpl-execution-geo-sample.siddhi successfully deployed.

Executing the Sample:
    1) Start the Siddhi application by clicking on 'Run'
	2) If the Siddhi application starts successfully, the following messages would be shown on the console
            * gpl-execution-geo-sample.siddhi - Started Successfully!

Testing the Sample:
  You can publish data event to the file, through event simulator
        You can publish data event to the file, through event simulator
        a) Open event simulator by clicking on the second icon or press Ctrl+Shift+I.
    	b) In the Single Simulation tab of the panel, select values as follows:
                * Siddhi App Name  : gpl-execution-geo-sample
                * Stream Name     : cleanedStream
        c) Enter following values in the fields and send
                latitude : 8.116553
                longitude : 77.523679
                prevLatitude : 9.850047
                prevLongitude : 98.597177

Viewing the Results:
  Viewing the Results:
    After clicking the start button see the output on the console as below.
    [2017-12-18_22-24-38_229] INFO {org.wso2.siddhi.core.query.processor.stream.LogStreamProcessor} - gpl-execution-geo-sample: Event :, StreamEvent{ timestamp=1513616078228, beforeWindowData=null, onAfterWindowData=null, outputData=[2322119.848252557], type=CURRENT, next=null}

  Note:
    Stop this Siddhi application, once you are done with the execution
*/

define stream cleanedStream (latitude double, longitude double, prevLatitude double, prevLongitude double);

@sink(type='log')
define stream logStream (distance double);

@info(name = 'query1')
from cleanedStream
select geo:distance(latitude, longitude, prevLatitude, prevLongitude) as distance
insert into logStream;