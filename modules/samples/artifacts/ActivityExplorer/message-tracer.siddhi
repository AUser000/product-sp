@App:name('message-tracer')
@App:description("This Siddhi app defines a Span Stream and converts the received span stream to WSO2 span stream format and persists")

/*

Purpose:
    This application demonstrates how to persist the activities recieved to the WSO2 Stream Processor and to view the relavant information when needed..

Prerequisites:

    1) Save this sample (This sample was generated by Activity Explorer Template which can be accessed using https://host_address:9643/business-rules)

    2) Copy {Product_Home}/samples/artifacts/ActivityExplorer/csv-files and {Product_Home}/samples/artifacts/ActivityExplorer/simulation-configs to {Product_Home}/wso2/editor/deployment folder

Executing the Sample:

    1) Start the Siddhi application by clicking on 'Run'

    2) Go to simulation section. And start ActivityExplorerSimulation.

    3) Start dashboard runtime and view "Activity Explorer" dashboard.
            i) Click on search.
            ii) Select a trace by clicking on a table row in the List gadget.
            iii) Select a span to view the data.
            iv) Information will be displayed in the Event gadget

*/

@App:name('message-tracer')
@App:description("This Siddhi app defines a source for the Span Stream and converts the received span stream to WSO2 span stream format")

@source(type='wso2event',  @map(type='wso2event')) define stream SpanStreamIn (meta_tenant_id int, meta_http_method string, meta_character_set_encoding string, meta_remote_address string, meta_transport_in_url string, meta_message_type string, meta_remote_host string, meta_service_prefix string, meta_host string, parentId string, traceId string, correlation_activity_id string, message_direction string, service_name string, operation_name string, message_id string, startTime long, endTime long, zone string, status string, startzone string, targetzone string, file_path string, file_name string, file_uri string, file_length long, last_modified long, transport_name string, soap_header string);

@Store(type='rdbms', datasource='Message_Tracing_DB', field.length="tags:8000")
@PrimaryKey('traceId', 'spanId')
define table SpanTable (serviceName string, operationName string, spanId string, traceId string, parentId string, tags string, baggageItems string, startTime long, endTime long, duration long, spanReferences string);


from SpanStreamIn
select str:concat(correlation_activity_id, startTime) as serviceName, "wso2-with-parent" as operationName, str:concat(correlation_activity_id, startTime) as spanId, traceId as traceId, parentId as parentId, str:concat("[{'meta_tenant_id':'", meta_tenant_id, "'},{'meta_http_method':'", meta_http_method, "'},{'meta_character_set_encoding':'", meta_character_set_encoding, "'},{'meta_remote_address':'", meta_remote_address, "'},{'correlation_activity_id':'", correlation_activity_id, "'},{'service_name':'", service_name, "'},{'operation_name':'", operation_name, "'},{'start_timestamp':'", startTime, "'},{'end_timestamp':'", endTime, "'}]") as tags, "[]" as baggageItems, startTime as startTime, endTime as endTime, "" as spanReferences
insert into TempSpanStream;

from TempSpanStream[ not true]
select serviceName, operationName, spanId, traceId, parentId, tags, baggageItems, startTime, endTime, spanReferences
insert into CreateParentSpanStream;

from TempSpanStream[true]
select serviceName, operationName, spanId, traceId, parentId, tags, baggageItems, startTime, endTime, spanReferences
insert into SpanStream;

from every( e1=CreateParentSpanStream) -> e2=CreateParentSpanStream[e1.traceId==traceId]<3>
within 1 min
select "parent_service" as serviceName, "parent_operation" as operationName, str:concat("parent_", e1.traceId) as spanId, e1.traceId as traceId, "-1" as parentId, "[]" as tags, "[]" as baggageItems, e1.startTime as startTime, e2[last].endTime as endTime, "" as spanReferences
insert into SpanStream;

from CreateParentSpanStream
select *
insert into SpanStream;

from SpanStream
select serviceName, operationName, spanId, traceId, parentId, tags, baggageItems, startTime, endTime, (endTime - startTime) as duration, spanReferences
insert into SpanTable;