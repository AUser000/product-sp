@App:name("PublishDataEventToFile")

@App:description('Publish data events processed within Siddhi to files in Json format.')

/*

Purpose:
	This application demonstrates how to configure WSO2 Stream Processor to publish data events processed within Siddhi to files in Json format.
    
Prerequisites:
    * Edit the uri '{WSO2SPHome}/samples/artifacts/0038/files/sink/{{name}}.txt' at line 39 by replacing {WSO2SPHome} with the absolute path of your WSO2SP home directory. You can also change the path after {WSO2SPHome} (/samples/artifacts/0038/files/sink/) if you want to publish your event file to a different location. 

	* Save this sample. If there is no syntax error, the following messages would be shown on the console:
	     * - Siddhi App PublishDataEventToFile successfully deployed. 
    
Executing the Sample:
	1) Start the Siddhi application by clicking on 'Run'.
	2) If the Siddhi application starts successfully, the following messages are shown on the console:
            * PublishDataEventToFile.siddhi - Started Successfully!

Testing the Sample:
  You can publish data events to the file through the event simulator:
        a) Open the event simulator by clicking on the second icon or pressing Ctrl+Shift+I.
    	b) In the Single Simulation tab of the panel, specify the values as follows:
                * Siddhi App Name  : PublishDataEventToFile
                * Stream Name     : SweetProductionStream
        c) In the name and amount fields, enter 'toffees' and '66.71' respectively and then click Send to send the event.
        d) Send another event with the same values but specify '200.0' for the amount.
            
Viewing the Results:
  Navigate to the path defined by file.uri ({WSO2SPHome}/samples/artifacts/0038/files/sink), where you can see a .txt file named after the event (e.g., toffees.txt) and open it. You can see the data events that you sent:
            {"event":{"name":"toffees","amount":66.71}}
        
            {"event":{"name":"toffees","amount":200.0}}	
*/

define stream SweetProductionStream (name string, amount double);

@sink(type='file', @map(type='json'), file.uri='{WSO2SPHome}/samples/artifacts/0038/files/sink/{{name}}.txt')
define stream LowProductionAlertStream (name string, amount double);

@info(name='query1') 
from SweetProductionStream
select *
insert into LowProductionAlertStream;



 



